#MAIN:

Before: Install passFF (https://github.com/passff/passff) extension, install and setup pass package on your machine.

1. Open .../TorBrowser/Data/Browser/{profile}/extensions/passff@invicem.pro.xpi as archive.
2. Go to /modules/pass.js, and change executePass function to:

executePass: background_function("Pass.executePass",
  function (args) {
    let command = "ls";
    if (args.length > 0) {
      if (["insert", "generate", "otp", "grepMetaUrls"].indexOf(args[0]) >= 0) {
        command = args[0];
      } else {
        command = "show";
      }
    }

    return new Promise((resolve, reject) => {
      const xhr = new XMLHttpRequest();
      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
          if (xhr.status === 200) {
            try {
              const result = JSON.parse(xhr.responseText);
              let version = result.version || "0.0";
              const compatible = (function isHostAppCompatible(version) {
                const MIN_VERSION = '1.0.1';
                return version === "testing" || semver.gte(version, MIN_VERSION);
              })(version);   

              if (!compatible) {
                log.warn("The host app is outdated!", version);
                result.exitCode = -2;
                result.stderr = `The host app (v${version}) is outdated!`;
              } else if (command === "otp" && version !== "testing"
                         && semver.gt("1.1.0", version)) {
                log.warn("This version of the host app does not support OTP!", version);
                PassFF.Page.notify(_("passff_error_otp_host_version", [PASSFF_URL_GIT_HOST]));
              } else if (command === "grepMetaUrls" && version !== "testing"
                         && semver.gt("1.2.0", version)) {
                log.warn("This version of the host app does not support "
                  + "indexing meta urls!", version);
                PassFF.Page.notify(_("passff_error_grep_host_version", [PASSFF_URL_GIT_HOST]));
              } else if (result.exitCode !== 0) {
                if (command === "otp" && result.stderr.trim() === "Error: "
                    + "otp is not in the password store.") {
                  log.warn("pass-otp plugin is not installed, but entry contains otpauth.");
                } else {
                  log.warn('Script execution failed', result.exitCode, result.stderr, result.stdout);
                  PassFF.Page.notify(_("passff_error_script_failed", [result.stderr]));
                }
              } else {
                log.debug('Script execution ok');
              }

              PassFF.Menu.state.lastResult = {
                'timestamp': new Date(),
                'stderr': result.stderr,
                'exitCode': result.exitCode,
                'command': command
              };

              resolve(result);
            } catch (error) {
              console.error('Error parsing JSON response:', error);
              reject(error);
            }
          } else {
            console.error('Error communicating with passff.py. Status:', xhr.status);
            reject(xhr.status);
          }
        }
      };

      const url = "http://localhost:5000/passff"; //You can change port
      xhr.open('POST', url, true);
      xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');

      const payload = JSON.stringify({ args });
      xhr.send(payload);
    });
  }
),

2.5 Optional, change host port.

3. Download passff.py, run it with "python passff.py".

3.5 If you changed port, change port on line 108 in passff.py.

4. Open Tor Browser and set "xpinstall.signatures.required" and "network.proxy.allow_hijacking_localhost" in about:config to false, otherwise, the Tor browser will simply not allow the modified extension to work. Restart Tor browser.

#WARNING: You should run pass.py in terminal, before opening the Tor Browser, you can run it from any directory.
